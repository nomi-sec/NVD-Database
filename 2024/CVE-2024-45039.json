{
    "cve": {
        "id": "CVE-2024-45039",
        "sourceIdentifier": "security-advisories@github.com",
        "published": "2024-09-06T13:15:04.400",
        "lastModified": "2024-09-20T00:12:48.847",
        "vulnStatus": "Analyzed",
        "cveTags": [],
        "descriptions": [
            {
                "lang": "en",
                "value": "gnark is a fast zk-SNARK library that offers a high-level API to design circuits. Versions prior to 0.11.0 have a soundness issue - in case of multiple commitments used inside the circuit the prover is able to choose all but the last commitment. As gnark uses the commitments for optimized non-native multiplication, lookup checks etc. as random challenges, then it could impact the soundness of the whole circuit. However, using multiple commitments has been discouraged due to the additional cost to the verifier and it has not been supported in the recursive in-circuit Groth16 verifier and Solidity verifier. gnark's maintainers expect the impact of the issue be very small - only for the users who have implemented the native Groth16 verifier or are using it with multiple commitments. We do not have information of such users. The issue has been patched in version 0.11.0. As a workaround, users should follow gnark maintainers' recommendation to use only a single commitment and then derive in-circuit commitments as needed using the `std\/multicommit` package."
            },
            {
                "lang": "es",
                "value": "gnark es una librer\u00eda zk-SNARK r\u00e1pida que ofrece una API de alto nivel para dise\u00f1ar circuitos. Las versiones anteriores a la 0.11.0 tienen un problema de solidez: en caso de que se utilicen m\u00faltiples compromisos dentro del circuito, el probador puede elegir todos los compromisos excepto el \u00faltimo. Como gnark utiliza los compromisos para la multiplicaci\u00f3n no nativa optimizada, las comprobaciones de b\u00fasqueda, etc. como desaf\u00edos aleatorios, podr\u00eda afectar la solidez de todo el circuito. Sin embargo, se ha desaconsejado el uso de m\u00faltiples compromisos debido al coste adicional para el verificador y no se ha admitido en el verificador recursivo Groth16 en circuito ni en el verificador Solidity. Los mantenedores de gnark esperan que el impacto del problema sea muy peque\u00f1o: solo para los usuarios que han implementado el verificador nativo Groth16 o lo est\u00e1n utilizando con m\u00faltiples compromisos. No tenemos informaci\u00f3n de dichos usuarios. El problema se ha solucionado en la versi\u00f3n 0.11.0. Como workaround, los usuarios deben seguir la recomendaci\u00f3n de los mantenedores de gnark de usar solo un \u00fanico compromiso y luego derivar compromisos en circuito seg\u00fan sea necesario utilizando el paquete `std\/multicommit`."
            }
        ],
        "metrics": {
            "cvssMetricV31": [
                {
                    "source": "security-advisories@github.com",
                    "type": "Secondary",
                    "cvssData": {
                        "version": "3.1",
                        "vectorString": "CVSS:3.1\/AV:L\/AC:L\/PR:N\/UI:N\/S:U\/C:N\/I:H\/A:N",
                        "baseScore": 6.2,
                        "baseSeverity": "MEDIUM",
                        "attackVector": "LOCAL",
                        "attackComplexity": "LOW",
                        "privilegesRequired": "NONE",
                        "userInteraction": "NONE",
                        "scope": "UNCHANGED",
                        "confidentialityImpact": "NONE",
                        "integrityImpact": "HIGH",
                        "availabilityImpact": "NONE"
                    },
                    "exploitabilityScore": 2.5,
                    "impactScore": 3.6
                },
                {
                    "source": "nvd@nist.gov",
                    "type": "Primary",
                    "cvssData": {
                        "version": "3.1",
                        "vectorString": "CVSS:3.1\/AV:L\/AC:L\/PR:N\/UI:N\/S:U\/C:N\/I:H\/A:N",
                        "baseScore": 6.2,
                        "baseSeverity": "MEDIUM",
                        "attackVector": "LOCAL",
                        "attackComplexity": "LOW",
                        "privilegesRequired": "NONE",
                        "userInteraction": "NONE",
                        "scope": "UNCHANGED",
                        "confidentialityImpact": "NONE",
                        "integrityImpact": "HIGH",
                        "availabilityImpact": "NONE"
                    },
                    "exploitabilityScore": 2.5,
                    "impactScore": 3.6
                }
            ]
        },
        "weaknesses": [
            {
                "source": "security-advisories@github.com",
                "type": "Secondary",
                "description": [
                    {
                        "lang": "en",
                        "value": "CWE-200"
                    }
                ]
            },
            {
                "source": "nvd@nist.gov",
                "type": "Primary",
                "description": [
                    {
                        "lang": "en",
                        "value": "NVD-CWE-noinfo"
                    }
                ]
            }
        ],
        "configurations": [
            {
                "nodes": [
                    {
                        "operator": "OR",
                        "negate": false,
                        "cpeMatch": [
                            {
                                "vulnerable": true,
                                "criteria": "cpe:2.3:a:consensys:gnark-crypto:*:*:*:*:*:*:*:*",
                                "versionEndExcluding": "0.11.0",
                                "matchCriteriaId": "622EAC41-6FA3-4B4A-948D-81E243DEFAA7"
                            }
                        ]
                    }
                ]
            }
        ],
        "references": [
            {
                "url": "https:\/\/github.com\/Consensys\/gnark\/commit\/e7c66b000454f4d2a4ae48c005c34154d4cfc2a2",
                "source": "security-advisories@github.com",
                "tags": [
                    "Broken Link"
                ]
            },
            {
                "url": "https:\/\/github.com\/Consensys\/gnark\/security\/advisories\/GHSA-q3hw-3gm4-w5cr",
                "source": "security-advisories@github.com",
                "tags": [
                    "Third Party Advisory"
                ]
            }
        ]
    }
}