{
    "cve": {
        "id": "CVE-2022-49167",
        "sourceIdentifier": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
        "published": "2025-02-26T07:00:53.837",
        "lastModified": "2025-10-21T17:13:31.160",
        "vulnStatus": "Analyzed",
        "cveTags": [],
        "descriptions": [
            {
                "lang": "en",
                "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nbtrfs: do not double complete bio on errors during compressed reads\n\nI hit some weird panics while fixing up the error handling from\nbtrfs_lookup_bio_sums().  Turns out the compression path will complete\nthe bio we use if we set up any of the compression bios and then return\nan error, and then btrfs_submit_data_bio() will also call bio_endio() on\nthe bio.\n\nFix this by making btrfs_submit_compressed_read() responsible for\ncalling bio_endio() on the bio if there are any errors.  Currently it\nwas only doing it if we created the compression bios, otherwise it was\ndepending on btrfs_submit_data_bio() to do the right thing.  This\ncreates the above problem, so fix up btrfs_submit_compressed_read() to\nalways call bio_endio() in case of an error, and then simply return from\nbtrfs_submit_data_bio() if we had to call\nbtrfs_submit_compressed_read()."
            },
            {
                "lang": "es",
                "value": "En el kernel de Linux, se ha resuelto la siguiente vulnerabilidad: btrfs: no completar dos veces la biograf\u00eda en caso de errores durante lecturas comprimidas Me encontr\u00e9 con algunos p\u00e1nicos extra\u00f1os mientras arreglaba la gesti\u00f3n de errores de btrfs_lookup_bio_sums(). Resulta que la ruta de compresi\u00f3n completar\u00e1 la biograf\u00eda que usamos si configuramos alguna de las biograf\u00edas de compresi\u00f3n y luego devolvemos un error, y luego btrfs_submit_data_bio() tambi\u00e9n llamar\u00e1 a bio_endio() en la biograf\u00eda. Arregle esto haciendo que btrfs_submit_compressed_read() sea responsable de llamar a bio_endio() en la biograf\u00eda si hay alg\u00fan error. Actualmente solo lo hac\u00eda si cre\u00e1bamos la biograf\u00eda de compresi\u00f3n, de lo contrario depend\u00eda de btrfs_submit_data_bio() para hacer lo correcto. Esto crea el problema mencionado anteriormente, as\u00ed que corrija btrfs_submit_compressed_read() para que siempre llame a bio_endio() en caso de error, y luego simplemente regrese de btrfs_submit_data_bio() si tuvi\u00e9ramos que llamar a btrfs_submit_compressed_read()."
            }
        ],
        "metrics": {
            "cvssMetricV31": [
                {
                    "source": "nvd@nist.gov",
                    "type": "Primary",
                    "cvssData": {
                        "version": "3.1",
                        "vectorString": "CVSS:3.1\/AV:L\/AC:L\/PR:L\/UI:N\/S:U\/C:N\/I:N\/A:H",
                        "baseScore": 5.5,
                        "baseSeverity": "MEDIUM",
                        "attackVector": "LOCAL",
                        "attackComplexity": "LOW",
                        "privilegesRequired": "LOW",
                        "userInteraction": "NONE",
                        "scope": "UNCHANGED",
                        "confidentialityImpact": "NONE",
                        "integrityImpact": "NONE",
                        "availabilityImpact": "HIGH"
                    },
                    "exploitabilityScore": 1.8,
                    "impactScore": 3.6
                }
            ]
        },
        "weaknesses": [
            {
                "source": "nvd@nist.gov",
                "type": "Primary",
                "description": [
                    {
                        "lang": "en",
                        "value": "NVD-CWE-noinfo"
                    }
                ]
            }
        ],
        "configurations": [
            {
                "nodes": [
                    {
                        "operator": "OR",
                        "negate": false,
                        "cpeMatch": [
                            {
                                "vulnerable": true,
                                "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
                                "versionStartIncluding": "5.16",
                                "versionEndExcluding": "5.16.19",
                                "matchCriteriaId": "20C43679-0439-405A-B97F-685BEE50613B"
                            },
                            {
                                "vulnerable": true,
                                "criteria": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
                                "versionStartIncluding": "5.17",
                                "versionEndExcluding": "5.17.2",
                                "matchCriteriaId": "210C679C-CF84-44A3-8939-E629C87E54BF"
                            }
                        ]
                    }
                ]
            }
        ],
        "references": [
            {
                "url": "https:\/\/git.kernel.org\/stable\/c\/4a4ceb2b990771c374d85d496a1a45255dde48e3",
                "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
                "tags": [
                    "Patch"
                ]
            },
            {
                "url": "https:\/\/git.kernel.org\/stable\/c\/987b5df1d10355d377315a26e7fb6c72ded83c9f",
                "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
                "tags": [
                    "Patch"
                ]
            },
            {
                "url": "https:\/\/git.kernel.org\/stable\/c\/f9f15de85d74e7eef021af059ca53a15f041cdd8",
                "source": "416baaa9-dc9f-4396-8d5f-8c081fb06d67",
                "tags": [
                    "Patch"
                ]
            }
        ]
    }
}