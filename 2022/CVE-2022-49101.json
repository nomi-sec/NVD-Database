{
    "cve": {
        "data_type": "CVE",
        "data_format": "MITRE",
        "data_version": "4.0",
        "CVE_data_meta": {
            "ID": "CVE-2022-49101",
            "ASSIGNER": "cve@kernel.org"
        },
        "problemtype": {
            "problemtype_data": [
                {
                    "description": []
                }
            ]
        },
        "references": {
            "reference_data": [
                {
                    "url": "https:\/\/git.kernel.org\/stable\/c\/0848767dee78c00c5646eef9b3201ee14ce68563",
                    "name": "https:\/\/git.kernel.org\/stable\/c\/0848767dee78c00c5646eef9b3201ee14ce68563",
                    "refsource": "",
                    "tags": []
                },
                {
                    "url": "https:\/\/git.kernel.org\/stable\/c\/5c0750cad73350e1c504eb91a94093a79f6f6296",
                    "name": "https:\/\/git.kernel.org\/stable\/c\/5c0750cad73350e1c504eb91a94093a79f6f6296",
                    "refsource": "",
                    "tags": []
                },
                {
                    "url": "https:\/\/git.kernel.org\/stable\/c\/8a7462b5211cd5b74b8815034d038e28cbd96d52",
                    "name": "https:\/\/git.kernel.org\/stable\/c\/8a7462b5211cd5b74b8815034d038e28cbd96d52",
                    "refsource": "",
                    "tags": []
                },
                {
                    "url": "https:\/\/git.kernel.org\/stable\/c\/a2a0e04f6478e8c1038db64717f3fafd55de1420",
                    "name": "https:\/\/git.kernel.org\/stable\/c\/a2a0e04f6478e8c1038db64717f3fafd55de1420",
                    "refsource": "",
                    "tags": []
                },
                {
                    "url": "https:\/\/git.kernel.org\/stable\/c\/b6f6b353d6c765b83c9e5e518a44ca1ae40fe227",
                    "name": "https:\/\/git.kernel.org\/stable\/c\/b6f6b353d6c765b83c9e5e518a44ca1ae40fe227",
                    "refsource": "",
                    "tags": []
                },
                {
                    "url": "https:\/\/git.kernel.org\/stable\/c\/be63f365f454e39d09c41bbd21ea72b5244160b5",
                    "name": "https:\/\/git.kernel.org\/stable\/c\/be63f365f454e39d09c41bbd21ea72b5244160b5",
                    "refsource": "",
                    "tags": []
                },
                {
                    "url": "https:\/\/git.kernel.org\/stable\/c\/eed05744322da07dd7e419432dcedf3c2e017179",
                    "name": "https:\/\/git.kernel.org\/stable\/c\/eed05744322da07dd7e419432dcedf3c2e017179",
                    "refsource": "",
                    "tags": []
                }
            ]
        },
        "description": {
            "description_data": [
                {
                    "lang": "en",
                    "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nxen: delay xen_hvm_init_time_ops() if kdump is boot on vcpu>=32\n\nThe sched_clock() can be used very early since commit 857baa87b642\n(\"sched\/clock: Enable sched clock early\"). In addition, with commit\n38669ba205d1 (\"x86\/xen\/time: Output xen sched_clock time from 0\"), kdump\nkernel in Xen HVM guest may panic at very early stage when accessing\n&__this_cpu_read(xen_vcpu)->time as in below:\n\nsetup_arch()\n -> init_hypervisor_platform()\n     -> x86_init.hyper.init_platform = xen_hvm_guest_init()\n         -> xen_hvm_init_time_ops()\n             -> xen_clocksource_read()\n                 -> src = &__this_cpu_read(xen_vcpu)->time;\n\nThis is because Xen HVM supports at most MAX_VIRT_CPUS=32 'vcpu_info'\nembedded inside 'shared_info' during early stage until xen_vcpu_setup() is\nused to allocate\/relocate 'vcpu_info' for boot cpu at arbitrary address.\n\nHowever, when Xen HVM guest panic on vcpu >= 32, since\nxen_vcpu_info_reset(0) would set per_cpu(xen_vcpu, cpu) = NULL when\nvcpu >= 32, xen_clocksource_read() on vcpu >= 32 would panic.\n\nThis patch calls xen_hvm_init_time_ops() again later in\nxen_hvm_smp_prepare_boot_cpu() after the 'vcpu_info' for boot vcpu is\nregistered when the boot vcpu is >= 32.\n\nThis issue can be reproduced on purpose via below command at the guest\nside when kdump\/kexec is enabled:\n\n\"taskset -c 33 echo c > \/proc\/sysrq-trigger\"\n\nThe bugfix for PVM is not implemented due to the lack of testing\nenvironment.\n\n[boris: xen_hvm_init_time_ops() returns on errors instead of jumping to end]"
                }
            ]
        }
    },
    "configurations": {
        "CVE_data_version": "4.0",
        "nodes": []
    },
    "impact": [],
    "publishedDate": "2025-02-26T07:00Z",
    "lastModifiedDate": "2025-02-26T07:00Z"
}