{
    "cve": {
        "data_type": "CVE",
        "data_format": "MITRE",
        "data_version": "4.0",
        "CVE_data_meta": {
            "ID": "CVE-2022-49355",
            "ASSIGNER": "cve@kernel.org"
        },
        "problemtype": {
            "problemtype_data": [
                {
                    "description": []
                }
            ]
        },
        "references": {
            "reference_data": [
                {
                    "url": "https:\/\/git.kernel.org\/stable\/c\/0ddb4334f4136cd5c84885032894663a4d57928d",
                    "name": "https:\/\/git.kernel.org\/stable\/c\/0ddb4334f4136cd5c84885032894663a4d57928d",
                    "refsource": "",
                    "tags": []
                },
                {
                    "url": "https:\/\/git.kernel.org\/stable\/c\/29a9935a90dd32b89d04e249e0a948cb4949e7af",
                    "name": "https:\/\/git.kernel.org\/stable\/c\/29a9935a90dd32b89d04e249e0a948cb4949e7af",
                    "refsource": "",
                    "tags": []
                },
                {
                    "url": "https:\/\/git.kernel.org\/stable\/c\/40e6078fcf186b4f452abcbffcb004e28d750395",
                    "name": "https:\/\/git.kernel.org\/stable\/c\/40e6078fcf186b4f452abcbffcb004e28d750395",
                    "refsource": "",
                    "tags": []
                },
                {
                    "url": "https:\/\/git.kernel.org\/stable\/c\/b43387364d8291190fd4ea1322b65c337802baa2",
                    "name": "https:\/\/git.kernel.org\/stable\/c\/b43387364d8291190fd4ea1322b65c337802baa2",
                    "refsource": "",
                    "tags": []
                },
                {
                    "url": "https:\/\/git.kernel.org\/stable\/c\/b49c884146e20314808c9420640b26876ff55c80",
                    "name": "https:\/\/git.kernel.org\/stable\/c\/b49c884146e20314808c9420640b26876ff55c80",
                    "refsource": "",
                    "tags": []
                },
                {
                    "url": "https:\/\/git.kernel.org\/stable\/c\/be9581f4fda795aa0e18cdc333efc1e447e1a55c",
                    "name": "https:\/\/git.kernel.org\/stable\/c\/be9581f4fda795aa0e18cdc333efc1e447e1a55c",
                    "refsource": "",
                    "tags": []
                },
                {
                    "url": "https:\/\/git.kernel.org\/stable\/c\/c0d076419136a7528abc1831847099400f61d60f",
                    "name": "https:\/\/git.kernel.org\/stable\/c\/c0d076419136a7528abc1831847099400f61d60f",
                    "refsource": "",
                    "tags": []
                },
                {
                    "url": "https:\/\/git.kernel.org\/stable\/c\/dbac14a5a05ff8e1ce7c0da0e1f520ce39ec62ea",
                    "name": "https:\/\/git.kernel.org\/stable\/c\/dbac14a5a05ff8e1ce7c0da0e1f520ce39ec62ea",
                    "refsource": "",
                    "tags": []
                },
                {
                    "url": "https:\/\/git.kernel.org\/stable\/c\/f319c9b45b351019349cc779ce6721ebc211245c",
                    "name": "https:\/\/git.kernel.org\/stable\/c\/f319c9b45b351019349cc779ce6721ebc211245c",
                    "refsource": "",
                    "tags": []
                }
            ]
        },
        "description": {
            "description_data": [
                {
                    "lang": "en",
                    "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nxen: unexport __init-annotated xen_xlate_map_ballooned_pages()\n\nEXPORT_SYMBOL and __init is a bad combination because the .init.text\nsection is freed up after the initialization. Hence, modules cannot\nuse symbols annotated __init. The access to a freed symbol may end up\nwith kernel panic.\n\nmodpost used to detect it, but it has been broken for a decade.\n\nRecently, I fixed modpost so it started to warn it again, then this\nshowed up in linux-next builds.\n\nThere are two ways to fix it:\n\n  - Remove __init\n  - Remove EXPORT_SYMBOL\n\nI chose the latter for this case because none of the in-tree call-sites\n(arch\/arm\/xen\/enlighten.c, arch\/x86\/xen\/grant-table.c) is compiled as\nmodular."
                }
            ]
        }
    },
    "configurations": {
        "CVE_data_version": "4.0",
        "nodes": []
    },
    "impact": [],
    "publishedDate": "2025-02-26T07:01Z",
    "lastModifiedDate": "2025-02-26T07:01Z"
}